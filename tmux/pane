
https://superuser.com/questions/1105090/move-a-tmux-pane-to-another-session


**************************
How to identify a pane:  (from man-page)
     target-pane (or src-pane or dst-pane) may be a pane ID or takes a similar form to target-window but with the optional addition of a period followed by a pane index or pane ID, for example: `mysession:mywindow.1'.  If the
     pane index is omitted, the currently active pane in the specified window is used.  The following special tokens are available for the pane index:

     Token                  Meaning
     {last}            !    The last (previously active) pane
     {next}            +    The next pane by number
     {previous}        -    The previous pane by number
     {top}                  The top pane
     {bottom}               The bottom pane
     {left}                 The leftmost pane
     {right}                The rightmost pane
     {top-left}             The top-left pane
     {top-right}            The top-right pane
     {bottom-left}          The bottom-left pane
     {bottom-right}         The bottom-right pane
     {up-of}                The pane above the active pane
     {down-of}              The pane below the active pane
     {left-of}              The pane to the left of the active pane
     {right-of}             The pane to the right of the active pane

     The tokens `+' and `-' may be followed by an offset, for example:

           select-window -t:+2


**************************
Copy a pane:
    capture-pane [-aepPqCJ] [-b buffer-name] [-E end-line] [-S
    start-line] [-t target-pane]
		  (alias: capturep)
	    Capture the contents of a pane.  If -p is given, the
	    output goes to stdout, otherwise to the buffer specified
	    with -b or a new buffer if omitted.  If -a is given,
	    the alternate screen is used, and the history is not
	    accessible.  If no alternate screen exists, an error
	    will be returned unless -q is given.  If -e is given,
	    the output includes escape sequences for text and
	    background attributes.  -C also escapes non-printable
	    char- acters as octal \xxx.  -J joins wrapped lines and
	    preserves trailing spaces at each line's end.  -P
	    captures only any output that the pane has received
	    that is the beginning of an as-yet incomplete escape
	    sequence.

	    -S and -E specify the starting and ending line numbers,
	    zero is the first line of the visible pane and negative
	    numbers are lines in the history.  `-' to -S is the
	    start of the history and to -E the end of the visi- ble
	    pane.  The default is to capture only the visible
	    contents of the pane.
tmux capture-pane -p -S -10000 -t :0    # scrape

# misc. cmds
:setw synchronize-panes    # Send keystrokes to multiple panes


To move window:
:movew -a -t {target-window}
# target-windows is of the form name-of-session:n  eg :movew -t 0:3
# without -a, the move will fail if the target window already exists.  With -a
# it pickes the next available index.


To move a pane between sessions, go to the destination pane:
tmux join-pane -s ${src_pane}  # Note: raw "2" means current window, pane 2.  Use ":2" to grab pane in window 2.
# Where src-pane is [{session}:]{window}[.{pane}]
# eg:
tmux join-pane -s :2     # Split current window and insert pane from window 2.  Focus moves to added pane.
tmux join-pane -s 2.1    # Split current window and insert pane witn index 1 from window 2
tmux join-pane -s name-of-session:2.1  # Split current window and insert pane witn index 1 from window 2 of session 4



**************************
Create a new pane above the current pane, using 80% of the screen:
tmux split-window -p 80 -b cmd with args


**************************
Cool trick:  run a command with output to a new pane:
$ cmd | tmux splitw -dI    # split-window

Now, run another command with output to that same pane:
$ cmd | tmux display-message -I -t:+



**************************
Run ssh in a split window.  Use select-pane to update the pane title

tmux split-window -p 80 -b sh -c "/usr/bin/ssh -A '$host'
	echo 'Hit return to close pane' >&2
	read";
tmux select-pane -T "$1"
