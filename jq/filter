#!/bin/sh

exec 2>&1
set -v

# Select members of a dict which have certain values:
json='[{"a":"av","b":"bv","c":"cv"},{"a":5,"b":7,"c":9}]'
echo "$json" | jq -c '.[] | select( .c == 9 )'

# Select certain keys:
json='{"a":"avalue", "b": "bvalue", "c": "cvalue"}'
echo "$json" | jq '{a,c}'
echo "$json" | jq '. | del(.a)'  # Delete the key a
echo "$json" | jq '. | with_entries( select(.key == "a" ) )'   # same as above
echo "$json" | jq '. | with_entries( select(.key | contains ("a") ) )'

# Select items in which the key matches a string
json='[{"genre":"deep house"}, {"genre": "progressive house"}, {"genre": "dubstep"}]'

echo "$json" | jq -c '.[] | select(.genre | contains("house"))'
echo "$json" | jq -c '.[] | select(.genre | contains("house") and startswith("deep"))'
echo "$json" | jq -c '.[] | select(.genre == "dubstep")'


json='{ "xc" : { "foo": ["a", "bc", "de"] , "bar": ["blah"], "baz":["bc"]}}'
echo "$json" | jq -c '.[]' # {"foo":["a","bc","de"],"bar":["blah"],"baz":["bc"]}
echo "$json" | jq -c '.xc.foo[1]' # "bc"
echo "$json" | jq -r -c '.xc.foo[1]' # bc  (no quotes)
echo "$json" | jq -c '.xc | objects | keys[]'   # Print "foo" and "bar"
# echo "$json" | jq -c '.xc | keys[]'   # Print "foo" and "bar"

echo 'MATHCING KEYS'
echo "$json" | jq -c '.xc | to_entries | map(select(.value | contains(["bc"]))) | .[].key '
#echo "$json" | jq -c '.xc | to_entries | .'

json='{ "devices" : [ {"id" : 0, "name": "bcval" }, {"id":1, "name":"doug"}],
	"buckets" : [ {"id" : 0, "name": "doug" }, {"id":1, "name":"banana"}]
}'

exe() {
	cmd=$1
	echo "input: $json"
	# echo jq -c "'$cmd'"
	echo "$json" | eval jq -c "'$cmd'"
}
exe '.'
exe '.[]'
exe '.devices[] | objects.name'  # Print '"bcval"\n"doug"\n'
exe '.devices[] | select (.name | startswith ("doug"))'
exe '.devices[] | select (.name == "bcval")'
exe '.devices[] | .name'


# Select particular keys
json='[{"blah":"bar", "name":"barry","projectId":"barrys id"}, {"name":"foo"}]'
echo "$json" | jq --tab ".[] | {name: .name, id: .projectId}"

# output:
# {
#   "name": "barry",
#   "id": "barrys id"
# }
# {
#   "name": "foo",
#   "id": null
# }
json='[{"blah":"bar", "name":"barry","projectId":"barrys id"}, {"name":"foo"},
	{ "k":{"z":{"name":"buried foo"}}}
]'
exe .
exe '..|.name?' # Recursive descent

# Pick multiple keys
json='[{"a":"a1", "b":"b1","c":"c1"},{"a":"a2", "b":"b2","c":"c2"}]'
exe '.[] | [.a,.c]'

# Select an element if any in array matches
json='[
	{"title":"has 7",
	"b":[
		{"c": 5, "d": 3 },
		{"c": 7, "d": 3 }
	]},
	{"title":"no match",
	"b":[
		{"c": 4, "d": 3 },
		{"c": 4, "d": 8 }
	]}
]'
# Select the element with title == "has 7", since one of the members of the subarray has a c == 7
exe '.[] | select( any(.b[]; .c == 7)) | .'
