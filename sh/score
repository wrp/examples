#!/bin/sh

# Simple attempt at making a usable score pad for termux.
# Score files are kept in in score_dir:
: ${score_dir="$HOME/scores"}

die() { printf "%s${1:+\n}" "$*"; exit 1; } >&2

if test $# -eq 0; then
	echo "usage: $(basename $0) <player1|file> [player2 ...]" >&2
	exit 1
fi

mkdir -p "$score_dir" || die
cd "$score_dir" || die

if test "$(git rev-parse --show-toplevel)" != "$(pwd -P)"; then
	printf "%s" "Git repo not setup in $score_dir.  Create? " >&2
	read reply
	case $reply in
	(y|Y) git init || die;;
	(*) die 'Aborting!';
	esac
fi

if test -f "$1"; then
	output=$1
	if ! git diff-index --quiet HEAD $output; then
		die "$output is dirty. Aborting!"
	fi
else
	output=game-"$(echo "$*" | tr ' ' -)-$(date +%Y-%m-%d@%H:%M:%S)"
	{
		printf "turn:"
		for x; do printf "\t%s" "$x"; done
		printf "\n%d" 1
	} > $output
	git add $output
	git commit -m "Create $output"
fi
player_count=$(awk 'NR==1 {print NF-1}' FS=\\t $output)

compute_next() {
	# Parse the file and find the next round and player
	read round player <<- EOF
	$(sed -n '$p' $output | awk '{print $1, NF }' FS=\\t )
	EOF
	if test "$player" -gt "$player_count"; then
		printf '\n%d' "$((round += 1 ))" >> $output
		player=1
	fi
}

display() {
	clear
	awk '1; {for(i=2; i<=NF;i++) sum[i] += $i}
		NF > max { max = NF }
		END {
			printf("\ntotal:")
			for(i=2;i<max;i++)
				printf( "\t%s", sum[i])
			printf( "\t%s\n", sum[max])
		}
	' "$1"
}

cleanup() {
	# Make sure there is no trailing newline after a manual edit
	v=$(cat $1)
	printf '%s' "$v" > $1
}
while true; do
	display "$output"
	compute_next
	player_name=$(awk 'NR==1 {print $(1+c)}' c=$player FS=\\t $output)

	printf '\n%s' "round $round score for $player_name: " >&2
	read score
	case "$score" in
	e)
		${EDITOR-vi} "$output"
		cleanup "$output"
		git add "$output"
		git commit -m 'Manual edit'
		continue;;
	q)
		v=$(display "$output")
		echo "$v" > $output
		git add "$output"
		git commit -m "Total scores"
		cat "$output"
		exit 0;;
	*)
		printf "\t%d" "$score" >> $output
		git add "$output"
		git commit -m "Round $round for $player_name"
	;;
	esac

done
