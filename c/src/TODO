In calc:

Need to be able to manipulate the stack and memory better.
Also, need to be able to clear things out.  Perhaps something
like [1,4,6,9]m to push items 1,4,6,9 from the memory to the
stack.   I like the idea of keeping items fixed in memory (so
item N is constant), but if we avoid duplication that means
that important values may wind up being inaccessible.  eg, if
you compute a value that is important and then compute a lot
of unimportant values, the important one will scroll off the
top of the display when you list the memory content.  Perhaps the
solution is to allow named memory stacks.  eg [foo]C might create
a memory stack named foo, then [foo]m could push to foo, etc.
Go ahead and continue storing values that are used for computation,
maybe on a stack named "trash" or similar, but don't make it be
the default stack from which to recover.  It almost feels like
this is becoming a complete programming language rather than
a simple toy to to reverse-polish!

Add the ability to evaluate a polynomial. Eg, something
like "[4x^3 + 2x - 12y][eval 3x 8y] where 3x would cause
x to take the value from memory location 3 and y from 8 (or more likely
off the stack) (Note, this is totaly unnecessary.  For example,
to compute 2x^3 -5x, you can already do "2[y 3^2* r 5 * -]0x",
which puts 2 on the stack and then evaluates the polynomial.  To
evaluate for x == 3, you can now do "3 0x".  So we should either
delete this paragraph, or leave it as a reminder to future self
that this is supposed to be "simple"...not a new language.)

Add command to delete all entries in the stack.  We can sort of
already do this with \sum.  Maybe just add a command to pop and
discard the top of the stack.

Add a command to allow sorting and deduplicating the memory stack.
Or...maybe the memory stack shouldn't be a stack at all.  Just make
it a sorted heap and always dedup when entering values.

Categorize values.  eg, in the display of the memory, it would
be nice to know if a value was entered, or calculated.  if
calculated, by what operator/function?  Also, we could indicate
if a value is already in memory and avoid duplicates.

Make it possible to specify a base for integer inputs.

Either have all of the registers pre-loaded with all the known
functions, or have ! cause them to be loaded if they are empty, or
have a command line argument to preload them.

Maybe make ! compute a factorial, and use a different operator for
running a function.  Or add a "fac" function.

Perhaps validate commas.  ie, "1,000" is a valid number, but "1,23"
is not.  Not sure how to handle values to the right of the radix
point.
