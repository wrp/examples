head	1.1;
access;
symbols;
locks; strict;
comment	@# @;


1.1
date	1994.10.19.16.14.18;	author wrp;	state Exp;
branches;
next	;


desc
@A stub Makefile to bootstrap the project.  If the user has RCS installed,
an invocation of 'make' in the top-level directory will cause a Makefile
to be generated from this file (this may be a gnu-make feature) which
will create a sub-directory in which the project will be built.
Common targets are provided which will be executed in the builddir.
A subsequent invocation of configure in the top-level directory
will overwrite this Makefile.
@


1.1
log
@Initial revision
@
text
@# Use this Makefile to generate build directories below the source dir.
# This is a convenience to create subdirectories and execute the configure
# script in them with various common options, and it should not get in the
# way if you wish to execute the configure script and generate a Makefile
# directly in the source dir.
#
# The default subdir is build/, which can be overriden by assigning BUILDDIR.
#
# Targets 'release' and 'debug' are provided that will assign CFLAGS, CPPFLAGS,
# and BUILDDIR to reasonable values.

BUILDDIR ?= build/$(shell uname -r | tr -dc '[:upper:][:lower:][:digit:]._-')
TARGETS = check clean distclean install dist distcheck
.PHONY: all release debug $(TARGETS)

all: $(BUILDDIR)/Makefile
	cd $(BUILDDIR) && make all
	@@echo Make complete in $(BUILDDIR)

debug:
	make BUILDDIR=debug/$(shell uname -r) CFLAGS='-g -O0 --coverage' all

release:
	make BUILDDIR=release/$(shell uname -r) CFLAGS='-g -O2' CPPFLAGS=-DNDEBUG all

configure:
	autoreconf -ivf

$(BUILDDIR)/Makefile: configure
	@@echo '***************************************************************'
	@@echo Generating configure script in $(BUILDDIR)
	@@for e in CC CFLAGS LDFLAGS CPPFLAGS CXXFLAGS LIBS; do \
		if test -n "$$(eval "printf '%s' \"\$$$$e\"")"; then \
			eval "echo $$e=\$$$$e"; \
		fi; \
	done
	@@echo 'see $(BUILDDIR)/config.log for details'
	@@echo '***************************************************************'
	@@mkdir -p $(BUILDDIR)
	@@# Explicitly assign CFLAGS, etc. so they are conspicuous in config.log
	@@s=$$(pwd); cd $(BUILDDIR) && $${s}/configure \
		$${CFLAGS:+CFLAGS="$(CFLAGS)"} \
		$${CPPFLAGS:+CPPFLAGS="$(CPPFLAGS)"} \
		$${CXXFLAGS:+CXXFLAGS="$(CXXFLAGS)"} \
		$${LDFLAGS:+CXXFLAGS="$(LDFLAGS)"} \
		;
	@@echo '$(BUILDDIR) configured'

$(TARGETS): $(BUILDDIR)/Makefile
	cd $(BUILDDIR) && make $@@

%: %.c $(BUILDDIR)/Makefile
	cd $(BUILDDIR) && make $@@
	@@echo Make complete in $(BUILDDIR)
@
