#!/bin/sh

exe=./dynamic-read

die() { test -n "$*" && echo "$*"; exit 1; } >&2

expect() {
	printf "$1" | $exe | perl -w -0777 -e 'my $m = <STDIN>;
		die "Got \"$m\", expected \"$ARGV[0]\"" if $m ne $ARGV[0]' "$2" || die
	test "$(printf "$1" | $exe | $exe)" = "$(printf "$1")" \
		|| die "Failed to invert '$1"
}

nl='
'
expect 'foo bar\none two\n' "rab oof${nl}owt eno${nl}"
expect 'foo\nbar' "oof${nl}rab"
expect abc cba
expect 'abc\n\n\ndef\n' "cba${nl}${nl}${nl}fed$nl"
expect '' ''
expect z z
expect "z\n" "z${nl}"
long=$( perl -e 'print "abcdefghgfedcba" x 1000')
expect "$long" "$long"
expect "$long\n" "$long$nl"

count=0
start_time="$(date +%s)"
for i in *; do
	test -f "$i" || continue
	: $(( count += 1 ))
	if ! $exe "$i" | $exe | cmp - "$i"; then
		if ! test "$(stat -c '%Y' "$i")" -lt "$start" 2> /dev/null; then
			# File recently modified.  Ignore test.
			: $(( count -= 1 ))
		else
			die "Okay for $count files, but failed on $i"
		fi
	fi
done
if test "$count" -lt 10; then
	echo "Not enough tests" >&2
	exit 77
fi
