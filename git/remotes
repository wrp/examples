# Push local branch to differently named remote branch (possibly creating remote_branch)
git push -u ${remote-origin} ${branch-HEAD}:${remote_branch?}

# Assign branch (for cut-n-paste)
branch=$(git rev-parse --abbrev-ref HEAD)

# Use a name other than 'origin' when cloning
git clone --origin ${remote_name?} ${url?}

# Delete a branch on remote
git push ${remote?} --delete ${remote_branch?}

# Create local branch to track extant remote
git fetch ${remote?}
git branch ${branch?}
git branch -u ${remote?}/${remote_branch-$branch} ${branch?}
# -- or (also checkout new branch) --
git checkout -t ${remote?}/${remote_branch-$branch}
# -- or (to use explicit local name)
git checkout -t -b ${branch?} ${remote?}/${remote_branch-$branch}

# Make extant local branch track branch on remote
git branch -u ${remote?}/${remote_branch-${branch?}} ${branch?}

# Create remote branch
git push ${remote?} ${branch?}       # creates remote with same name
git push --set-upstream ${remote?} ${branch?}   # --set-upstream == -u

# Delete a tag from a remote
git push --delete ${remote?} ${tag?}

# Stop tracking remote
git branch --unset-upstream [branch (default to current)]

# Show all refs on a remote
git remote show ${remote?}

# Sync refs with remote
git remote update --prune

# Add multiple urls to a remote:
git remote add ${remote?} $(git remote get-url --push bitbucket)
git remote set-url ${remote?} --add $(git remote get-url --push gitlab)
git remote set-url ${remote?} --add $(git remote get-url --push github)

# List branches on a given remote
git ls-remote --heads ${remote}
git branch --list -r "${remote}/*"

# Reset branch to upstream
git reset --hard @{u}   # @{u} is abbreviation for upstream branch
