#!/usr/bin/env python

# keywords: annotation

# See: https://peps.python.org/pep-0484 and
# https://peps.python.org/pep-0649

from __future__ import annotations  # Allow incomplete types
# explicit import of types is not necessary when using __future__.annotations
# from typing import Tuple, Optional


def f(x: int, y: Optional[Tuple[int, str]] = None) -> Optional[int]:
    if x > 0:
        return x
    else:
        return None

class Bar():
    def __init__(self: Bar, x: int) -> None:
        self.x = x

a = Bar(f(1))
