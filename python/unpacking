#!/usr/bin/env python

# keywords: operator *, splat, spread, flatten, iterable unpacking
#     dictionary unpacking
# See https://docs.python.org/3/reference/expressions.html#expression-lists


# The operator * applies to an iterable, and unpacks it.  eg

t = (1, 2, 3, 4)
list_containing_tuple = [2, 3, t] # [2, 3, (1, 2, 3, 4)]
flattened_list = [2, 3, *t]       # [2, 3, 1, 2, 3, 4]

# The operator ** applies to a mapping
m = {'one': 1, 'two': 2}
b = {'zero': 0, **m}  # {'zero': 0, 'one': 1, 'two': 2}
# b = {0:'zero', *a}  # syntax error


# Commonly used to unpack into function arguments
def printer(*args, **kwargs):
    print(f'args = {args}')
    print(f'kwargs = {kwargs}')

printer(b)  # args = ({'zero': 0, 'one': 1, 'two': 2},), kwargs = {}
printer(*b)  # args = ('zero', 'one', 'two'), kwargs = {}
printer(**b)  # args = (), kwargs = {'zero': 0, 'one': 1, 'two': 2}
