#!/usr/bin/env python

from abc import ABC, abstractmethod

# Show that issubclass can be true if a class presents an interface

class Foo:
    def __frob__(self):
        return 'Frob'

class Bar: pass

class MyFrobnicator(ABC):
    @abstractmethod
    def __frob__(self): pass

    @classmethod
    def __subclasshook__(cls, C):
        if cls is MyFrobnicator:
            if any("__frob__" in B.__dict__ for B in C.__mro__):
                return True
        return NotImplemented

assert issubclass(Foo, MyFrobnicator)
assert not issubclass(Bar, MyFrobnicator)
