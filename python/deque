#!/usr/bin/python2.7

import bisect
import collections

# Fast queue that allows fast removal from head and sorted
# insert.
class FastQueue:

    def __init__(self):
        self.__deque = collections.deque()

    def __len__(self):
        return len(self.__deque)

    def __str__(self):
        a = []
        for elem in self.__deque:
            a.append(str(elem))
        return "[" + ",".join(a) + "]"

    def head(self):
        return self.__deque.popleft()

    def insert(self, obj):
        index = bisect.bisect_left(self.__deque, obj)
        self.__deque.rotate(-index)
        self.__deque.appendleft(obj)
        self.__deque.rotate(index)

    def content(self):
        return self.__deque


A = FastQueue()
for x in range(5):
    A.insert(3 * x)

print A
print A.head()
print A
A.insert(7)
print A

print 'pop and insert'
k = A.head()
print 'k = ', k
A.insert(k)
print A
