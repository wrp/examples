#!/usr/bin/env python


# To setup a listener on port 8000, execute:
# python -m http.server


import sys
import urllib
import urllib.request

url='http://localhost:8000'

# Make a simple request and decode as utf-8
with urllib.request.urlopen(url) as response:
    html = response.read()
character_set = response.headers.get_content_charset()  # eg: utf-8
decoded = html.decode(character_set)
print(decoded)

# The metadata is available after the request is closed
print(response.headers)

# With headers:
request = urllib.request.Request(url, headers={
    'User-Agent': 'Mozilla/5.0 (X11; Linux i686) AppleWebKit/537.17 (KHTML, like Gecko) Chrome/24.0.1312.27 Safari/537.17'
})
# with urllib.request.urlopen(request) as response:

# methods of response:
# ['__abstractmethods__', '__class__', '__del__', '__delattr__',
# '__dict__', '__dir__', '__doc__', '__enter__', '__eq__', '__exit__',
# '__format__', '__ge__', '__getattribute__', '__getstate__', '__gt__',
# '__hash__', '__init__', '__init_subclass__', '__iter__', '__le__',
# '__lt__', '__module__', '__ne__', '__new__', '__next__', '__reduce__',
# '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__',
# '__subclasshook__', '_abc_impl', '_checkClosed', '_checkReadable',
# '_checkSeekable', '_checkWritable', '_check_close', '_close_conn',
# '_get_chunk_left', '_method', '_peek_chunked', '_read1_chunked',
# '_read_and_discard_trailer', '_read_chunked', '_read_next_chunk_size',
# '_read_status', '_readinto_chunked', '_safe_read', '_safe_readinto',
# 'begin', 'chunk_left', 'chunked', 'close', 'closed', 'code', 'debuglevel',
# 'detach', 'fileno', 'flush', 'fp', 'getcode', 'getheader', 'getheaders',
# 'geturl', 'headers', 'info', 'isatty', 'isclosed', 'length', 'msg',
# 'peek', 'read', 'read1', 'readable', 'readinto', 'readinto1', 'readline',
# 'readlines', 'reason', 'seek', 'seekable', 'status', 'tell', 'truncate',
# 'url', 'version', 'will_close', 'writable', 'write', 'writelines']


# Construct a url

url = 'https://example.com/somepage/?'
params = {'var1': 'some data', 'var2': 1337}

if sys.version_info.major == 2:
    print(url + urllib.urlencode(params))
elif sys.version_info.major == 3:
    print(url + urllib.parse.urlencode(params))
else:
    raise RuntimeError
