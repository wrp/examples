#!/usr/bin/env python

# Instances of a class with a __slots__ member can only have attributes
# explicitly named in __slots__

class Example:
	__slots__ = ('name', 'height')
	def __init__(self, x, h = 5):
		self.name = x
		self.height = h

	def __str__(self):
		return f'{self.name}: {self.height}'

a = Example('a')
try:
    a.weight = 7
except AttributeError:
    pass

class Example2:
    __slots__ = ('a', 'b', 'c')
    def __init__(self, **kwargs):
        # self.__dict__.update(kwargs) Ooops: no __dict__ is slots is defined
        for k,v in kwargs.items():
            setattr(self, k, v)

a = Example2(a=5, b=6)
assert a.a == 5
assert a.b == 6
try: print(a.c)
except AttributeError: assert True
else: assert False
