#!/usr/bin/env python

# Demonstrate __eq__, __ne__
from dataclasses import dataclass

@dataclass(eq=False)
class Base():
    x: float

class EQ(Base):
    def __eq__(self, other):
        print('eq')
        return self.x == other.x

class NE(Base):
    def __ne__(self, other):
        print('ne')
        return self.x != other.x

class Neither(Base): pass

f = EQ(2)
b = NE(2)
c = Neither(2)

assert f == b         # calls f.__eq__(b)
assert b == f         # delegates to f.__eq__(b)
assert not (f != b)   # delegates to f.__eq__(b)
assert not (b != f)   # calls be.__ne__(f)
assert f == c         # calls f.__eq__(c)
assert c == f         # delegates to f.__eq__(c)
assert False == (c == b)     # no dunder method is called
