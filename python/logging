#!/usr/bin/env python

import logging
import sys
from functools import wraps


def log_decorator(f):
    @wraps(f)
    def wrapper(*args, **kwargs):
        print(f"wrapped by decorator {args}: ", end='')
        return f(*args, **kwargs)
    return wrapper

class LogWrapper(logging.Logger):
    def __init__(self, name, level=logging.NOTSET):
        return super(LogWrapper, self).__init__(name, level)

    def info(self, msg, *args, **kwargs):
        print(f"log wrapper called with {msg}: ", end='')
        return super(LogWrapper, self).info(msg, *args, **kwargs)



logging.setLoggerClass(LogWrapper)
logging.basicConfig(
    stream=sys.stdout,
    level='INFO'  # Can use string or integer.  eg level=logging.INFO
)

logger = logging.getLogger('log')

logging.info('foo')
logging.info = log_decorator(logging.info)
logging.info('baz')
logger.info('bar')
