#!/usr/bin/env python

'''
class map(object)
 |  map(func, *iterables) --> map object
 |
 |  Make an iterator that computes the function using arguments from
 |  each of the iterables.  Stops when the shortest iterable is exhausted.
'''


a = [1, 2, 3]
b = [[c] for c in "abc"]

# To create an iterator that calls a function for each
# element of the list, use map.  To actually call the
# function for each element, you have to explode the iterator.
list(map(lambda x, a: x.append(a), b, a))

list(map(lambda x: print(x), b))
