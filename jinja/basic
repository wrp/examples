#!/usr/bin/env python3

from jinja2 import Template
t = Template("Hello {{ something }}!")
s = t.render(something="World")

print(s)

a = ('alice', 'bob')
b = True

t =  Template('''for loop: {% for item in a %} item: {{ item }} {% endfor %}
comment: {# This is a commment #}
conditional   {%- if b -%}
{#- the leading %- strips whitespace before the if, trailing strips after -#}
conditional is true
{%- endif -%}  {#- test -#}
foo
''')
print(t.render(globals()))


print('Use {% -%} to strip whitespace before each item:')
t =  Template('''for loop:   {% for item in a -%}     item: {{ item }}       {% endfor %}         :''')
#                                                ^^^^^ removed        ^^^^^^^ retained
print(t.render(globals()))
print('Use {%- %} to strip whitespace before the structure:')
t =  Template('''for loop:   {%- for item in a %}     item: {{ item }}       {% endfor %}         :''')
#                         ^^^ removed
print(t.render(globals()))
print('Use {%- %} (in endfor) to strip whitespace after each item:')
t =  Template('''for loop:   {% for item in a %}     item: {{ item }}       {%- endfor %}         :''')
#                                                                    ^^^^^^^ removed
print(t.render(globals()))
print('Use {% -%} (in endfor) to strip whitespace after the structure:')
t =  Template('''for loop:   {% for item in a %}     item: {{ item }}       {% endfor -%}         :''')
#                                                                                        ^^^^^^^^^ removed
print(t.render(globals()))

print(Template('''
{%- macro foo() -%}

  This macro has no arguments
{%- endmacro -%}

{%- macro bar(x) -%}
from bar {{x}} {{ foo() }}
{% endmacro -%}

{{foo() -}} {{foo()}}
{{bar('banana')}}
''').render(globals()))
