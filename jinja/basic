#!/usr/bin/env python3

from jinja2 import Environment, FileSystemLoader


def show(t, **kwargs):
    template = Environment(loader=FileSystemLoader('.')).from_string(t)
    print(template.render(globals(), **kwargs))

    t = Environment(loader=FileSystemLoader('.')).from_string(t)

show('Hello {{ something }}', something = 'World')

show('''for loop: {% for item in a %} item: {{ item }} {% endfor %}
comment: {# This is a commment #}
conditional   {%- if b -%}
{#- the leading %- strips whitespace before the if, trailing strips after -#}
conditional is true
{%- endif -%}  {#- test -#}
foo''', a = ('alice', 'bob'), b = True)


a = ('alice', 'bob')
print('Use {% -%} to strip whitespace before each item:')
show('''for loop:   {% for item in a -%}     item: {{ item }}       {% endfor %}         :''')
#                                       ^^^^^ removed        ^^^^^^^ retained
print('Use {%- %} to strip whitespace before the structure:')
show('''for loop:   {%- for item in a %}     item: {{ item }}       {% endfor %}         :''')
#                ^^^ removed
print('Use {%- %} (in endfor) to strip whitespace after each item:')
show('''for loop:   {% for item in a %}     item: {{ item }}       {%- endfor %}         :''')
#                                                           ^^^^^^^ removed
print('Use {% -%} (in endfor) to strip whitespace after the structure:')
show('''for loop:   {% for item in a %}     item: {{ item }}       {% endfor -%}         :''')
#                                                                               ^^^^^^^^^ removed

show('''
{%- macro foo() -%}

  This macro has no arguments
{%- endmacro -%}

{%- macro bar(x) -%}
from bar {{x}} {{ foo() }}
{% endmacro -%}

{{foo() -}} {{foo()}}
{{bar('banana')}}
''')

show('{% include "foo.j2" %}')
