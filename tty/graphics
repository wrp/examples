#!/usr/bin/env perl
# A random collection of symbols.
# printf '\xf0\x9f\x9b\x91 \U1f6d1'  # Shell printf

use 5.12.0;
use Unicode::UCD "charinfo";
use Data::Dumper;


my @samples = (
	'f09f9b91',  # A stop sign: ðŸ›‘  x1f6d1
	'e29c8b',    # A yellow hand  âœ‹
	'f09f8c80',  # Debian symbol ðŸŒ€
	'f09f8cb9',  # A rose ðŸŒ¹
	'e2888a',    # âˆŠ
	'e28888',    # âˆˆ
	'e2889e',    # âˆž
	'c2b1',      # Â±
	'cf80',      # Ï€
	'e284a4',    # â„¤
	'e29ca8',    # âœ¨
	'e29c85',    # âœ…
);
printf "%s", pack "H*", $_ foreach @samples; print "\n";
# print Dumper(charinfo(0x1f6d1));

sub print_range {
	printf("%x .. %x: ", $_[0], $_[1]);
	foreach my $x ($_[0]..$_[1]) {
		my $s = sprintf('%x', $x);
		printf "%s", pack "H*", $s;
	}
	print "\n";
}
# Some chineses characters
print_range 0xe58c90, 0xe58cb0;

# use open ":std", ":encoding(UTF-8)";
binmode STDOUT, ':encoding(UTF-8)';

print "\\U1f6d1: " . chr(0x1f6d1) . "\n";

@samples = (
	[0x2589..0x25A0],  # Block elements
	[0x2B00..0x2B56],  # Miscellaneous symbols and arrows
	[9800..9811],      # Miscellaneous symbols
	[9812..9831],      #   chess/card symbols
	[9833..9839],      #   music
	[9855..9865],
	[9889..9899],
	[913..991],        # Greek an Coptic
);

my $block = "";
my $previous_block = "";

foreach my $range (@samples) {
	my $first = $$range[0];
	my $info = charinfo($first);
	# print Dumper($info);
	$block = $$info{block};
	say $block if $block ne $previous_block;
	$previous_block = $block;

	print chr($_) . (( ($_ % 16) == (($first - 1) % 16)) ? "\n" : "  ")
		foreach (@$range);
	print "\n";
}


# perl -MUnicode::UCD=charinfo -MData::Dumper -e 'print Dumper(charinfo(0x1f6d1))'
