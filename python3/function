#!/usr/bin/env python3

class Foo:
	def __init__(self, x=0, name=None):
		self.x = x
		self.name = name

	def __repr__(self):
		return '{} -> x = {}'.format(self.name, self.x)


# AFAICT, the type annotations have no bearing at runtime.  They
# are only relevant to the static type checker, so returning
# a float from a function that returns int is not a runtime error.
def foo(obj: Foo) -> int:
    return obj.x + 3.3

if __name__ == '__main__':
    x = Foo(5, "doug")
    print(x)
    a = foo(x)
    print(a)

